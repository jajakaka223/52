const { Pool } = require('pg');
const bcrypt = require('bcryptjs');

// Railway –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
const railwayPool = new Pool({
  connectionString: 'postgresql://postgres:CyBafKYUrbExtogaBgDIyDEPJLBIEkqk@switchyard.proxy.rlwy.net:25770/railway',
  ssl: { rejectUnauthorized: false }
});

async function fixPasswords() {
  try {
    console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª–∏ –≤ Railway...');
    
    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    const adminPasswordHash = await bcrypt.hash('admin', 10);
    const driverPasswordHash = await bcrypt.hash('driver123', 10);
    
    console.log('‚úÖ –î–ª–∏–Ω–∞ —Ö–µ—à–∞ admin:', adminPasswordHash.length);
    console.log('‚úÖ –î–ª–∏–Ω–∞ —Ö–µ—à–∞ driver:', driverPasswordHash.length);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª–∏
    await railwayPool.query(
      'UPDATE users SET password = $1 WHERE username = $2',
      [adminPasswordHash, 'admin']
    );
    console.log('‚úÖ –ü–∞—Ä–æ–ª—å admin –æ–±–Ω–æ–≤–ª–µ–Ω');
    
    await railwayPool.query(
      'UPDATE users SET password = $1 WHERE username = $2',
      [driverPasswordHash, 'driver1']
    );
    console.log('‚úÖ –ü–∞—Ä–æ–ª—å driver1 –æ–±–Ω–æ–≤–ª–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const adminResult = await railwayPool.query('SELECT password FROM users WHERE username = $1', ['admin']);
    console.log('‚úÖ –ù–æ–≤–∞—è –¥–ª–∏–Ω–∞ —Ö–µ—à–∞ admin:', adminResult.rows[0].password.length);
    
    console.log('üéâ –ü–∞—Ä–æ–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π:', err.message);
  } finally {
    await railwayPool.end();
  }
}

fixPasswords();

