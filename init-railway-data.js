const { Pool } = require('pg');

// Railway –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
const railwayPool = new Pool({
  connectionString: 'postgresql://postgres:CyBafKYUrbExtogaBgDIyDEPJLBIEkqk@switchyard.proxy.rlwy.net:25770/railway',
  ssl: { rejectUnauthorized: false }
});

async function initData() {
  console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Railway...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await railwayPool.query('SELECT 1');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminPassword = 'admin'; // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω—É–∂–Ω–æ —Ö–µ—à–∏—Ä–æ–≤–∞—Ç—å
    const adminQuery = `
      INSERT INTO users (username, password, email, role, full_name, phone, created_at) 
      VALUES ($1, $2, $3, $4, $5, $6, NOW())
      ON CONFLICT (username) DO NOTHING
    `;
    
    await railwayPool.query(adminQuery, [
      'admin',
      adminPassword,
      'admin@52express.com',
      'admin',
      '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      '+7 (999) 123-45-67'
    ]);
    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω (admin/admin)');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è
    const driverQuery = `
      INSERT INTO users (username, password, email, role, full_name, phone, created_at) 
      VALUES ($1, $2, $3, $4, $5, $6, NOW())
      ON CONFLICT (username) DO NOTHING
    `;
    
    await railwayPool.query(driverQuery, [
      'driver1',
      'driver123',
      'driver@52express.com',
      'driver',
      '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      '+7 (999) 234-56-78'
    ]);
    console.log('‚úÖ –í–æ–¥–∏—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω (driver1/driver123)');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
    const vehicles = [
      {
        make: '–ì–ê–ó',
        model: '–ì–ê–ó–µ–ª—å NEXT',
        year: 2022,
        license_plate: '–ê123–ë–í777',
        capacity: 1500,
        status: 'available'
      },
      {
        make: '–ö–ê–ú–ê–ó',
        model: '5320',
        year: 2021,
        license_plate: '–í456–ì–î777',
        capacity: 8000,
        status: 'available'
      },
      {
        make: '–ú–ê–ó',
        model: '6312',
        year: 2023,
        license_plate: '–°789–ï–ñ777',
        capacity: 12000,
        status: 'maintenance'
      }
    ];
    
    for (const vehicle of vehicles) {
      const vehicleQuery = `
        INSERT INTO vehicles (make, model, year, license_plate, capacity, status, created_at) 
        VALUES ($1, $2, $3, $4, $5, $6, NOW())
        ON CONFLICT (license_plate) DO NOTHING
      `;
      
      await railwayPool.query(vehicleQuery, [
        vehicle.make,
        vehicle.model,
        vehicle.year,
        vehicle.license_plate,
        vehicle.capacity,
        vehicle.status
      ]);
    }
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å–æ–∑–¥–∞–Ω—ã');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
    const orders = [
      {
        customer_name: '–û–û–û "–†–æ–≥–∞ –∏ –∫–æ–ø—ã—Ç–∞"',
        customer_phone: '+7 (495) 123-45-67',
        pickup_address: '–ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, 1',
        delivery_address: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 100',
        cargo_description: '–ú–µ–±–µ–ª—å',
        weight: 500,
        status: 'pending'
      },
      {
        customer_name: '–ò–ü –°–∏–¥–æ—Ä–æ–≤',
        customer_phone: '+7 (812) 234-56-78',
        pickup_address: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, —É–ª. –ü—É—à–∫–∏–Ω–∞, 10',
        delivery_address: '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 50',
        cargo_description: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
        weight: 200,
        status: 'in_progress'
      }
    ];
    
    for (const order of orders) {
      const orderQuery = `
        INSERT INTO orders (customer_name, customer_phone, pickup_address, delivery_address, 
                           cargo_description, weight, status, created_at) 
        VALUES ($1, $2, $3, $4, $5, $6, $7, NOW())
      `;
      
      await railwayPool.query(orderQuery, [
        order.customer_name,
        order.customer_phone,
        order.pickup_address,
        order.delivery_address,
        order.cargo_description,
        order.weight,
        order.status
      ]);
    }
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã —Å–æ–∑–¥–∞–Ω—ã');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã
    const expenses = [
      {
        type: 'fuel',
        amount: 5000,
        description: '–ó–∞–ø—Ä–∞–≤–∫–∞ —Ç–æ–ø–ª–∏–≤–æ–º',
        date: new Date()
      },
      {
        type: 'maintenance',
        amount: 15000,
        description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
        date: new Date()
      }
    ];
    
    for (const expense of expenses) {
      const expenseQuery = `
        INSERT INTO expenses (type, amount, description, date, created_at) 
        VALUES ($1, $2, $3, $4, NOW())
      `;
      
      await railwayPool.query(expenseQuery, [
        expense.type,
        expense.amount,
        expense.description,
        expense.date
      ]);
    }
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã —Å–æ–∑–¥–∞–Ω—ã');
    
    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin');
    console.log('   –í–æ–¥–∏—Ç–µ–ª—å: driver1 / driver123');
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', err.message);
    throw err;
  } finally {
    await railwayPool.end();
  }
}

initData();
