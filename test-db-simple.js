const { Pool } = require('pg');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é
const config = {
  host: 'localhost',
  port: 5432,
  database: 'transport_company',
  user: 'postgres',
  password: '123321',
  max: 1,
  idleTimeoutMillis: 5000,
  connectionTimeoutMillis: 5000,
};

console.log('üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
console.log(`   Host: ${config.host}`);
console.log(`   Port: ${config.port}`);
console.log(`   Database: ${config.database}`);
console.log(`   User: ${config.user}`);
console.log(`   Password: ${config.password ? '***' : '–Ω–µ –∑–∞–¥–∞–Ω'}`);

const pool = new Pool(config);

async function testConnection() {
  try {
    console.log('\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    
    const result = await client.query('SELECT version()');
    console.log('üìã –í–µ—Ä—Å–∏—è PostgreSQL:', result.rows[0].version);
    
    client.release();
    await pool.end();
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    console.error('üîç –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
    console.error('üìù –î–µ—Ç–∞–ª–∏:', error.detail);
    
    if (error.code === '28P01') {
      console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
      console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres');
      console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö transport_company —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres');
    }
  }
}

testConnection();
