const axios = require('axios');

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ –≤ Telegram –±–æ—Ç
 * @param {string} emailAddress - email –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} routeInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ
 * @param {Object} orderData - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
 */
async function sendCompletionNotification(emailAddress, routeInfo, orderData = {}) {
  try {
    // URL –≤–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    const TELEGRAM_BOT_URL = process.env.TELEGRAM_BOT_URL || 'https://api.telegram.org/bot7569282805:AAFQHAX-moIoTpVSLvNpOXWtrVbwepr31iE';
    
    // ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const CHAT_ID = process.env.TELEGRAM_CHAT_ID || '-1002419921277';
    const THREAD_ID = process.env.TELEGRAM_THREAD_ID || '12493';
    
    if (!CHAT_ID) {
      console.log('‚ö†Ô∏è TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
      return { success: false, error: 'TELEGRAM_CHAT_ID not configured' };
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    const message = {
      chat_id: CHAT_ID,
      message_thread_id: THREAD_ID, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ç–µ–º—É
      text: `üéØ **–ó–ê–ü–†–û–° –ù–ê –û–¢–ü–†–ê–í–ö–£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò**

üìß **Email –∫–ª–∏–µ–Ω—Ç–∞:** ${emailAddress}
üõ£Ô∏è **–ú–∞—Ä—à—Ä—É—Ç:** ${routeInfo}
üìÖ **–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** ${new Date().toLocaleDateString('ru-RU')}
${orderData.orderId ? `üÜî **ID –∑–∞—è–≤–∫–∏:** ${orderData.orderId}` : ''}
${orderData.company ? `üè¢ **–ö–æ–º–ø–∞–Ω–∏—è:** ${orderData.company}` : ''}
${orderData.clientName ? `üë§ **–ö–ª–∏–µ–Ω—Ç:** ${orderData.clientName}` : ''}
${orderData.phone ? `üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** ${orderData.phone}` : ''}

**–î–µ–π—Å—Ç–≤–∏–µ:** –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç—É –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ

---
üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:**
- –û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
- –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ  
- –†–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ –Ω–∞—Å –¥—Ä—É–∑—å—è–º –∏ –∫–æ–ª–ª–µ–≥–∞–º
- –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤

üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã:**
- –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
- Email: info@yourcompany.com
- –°–∞–π—Ç: yourcompany.com`,
      parse_mode: 'Markdown'
    };

    console.log('üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ Telegram –±–æ—Ç:', {
      emailAddress,
      routeInfo,
      orderId: orderData.orderId
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram –±–æ—Ç
    const response = await axios.post(`${TELEGRAM_BOT_URL}/sendMessage`, message, {
      timeout: 10000,
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.data.ok) {
      console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram –±–æ—Ç');
      return { success: true, messageId: response.data.result.message_id };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram –±–æ—Ç:', response.data);
      return { success: false, error: response.data };
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram –±–æ—Ç:', error.message);
    return { success: false, error: error.message };
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
 * @param {string} emailAddress - email –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} routeInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ
 * @param {Object} orderData - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
 */
async function sendCompletionEmail(emailAddress, routeInfo, orderData = {}) {
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
  return await sendCompletionNotification(emailAddress, routeInfo, orderData);
}

module.exports = {
  sendCompletionNotification,
  sendCompletionEmail
};
