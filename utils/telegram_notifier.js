const axios = require('axios');

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ –≤ Telegram –±–æ—Ç
 * @param {string} emailAddress - email –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} routeInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ
 * @param {Object} orderData - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
 */
async function sendCompletionNotification(emailAddress, routeInfo, orderData = {}) {
  try {
    // URL —Å–µ—Ä–≤–µ—Ä–∞ —Å Python –±–æ—Ç–æ–º
    const PYTHON_BOT_SERVER = process.env.PYTHON_BOT_SERVER || 'http://109.205.58.89:8000';
    
    // ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const CHAT_ID = process.env.TELEGRAM_CHAT_ID || '-1002419921277';
    const THREAD_ID = process.env.TELEGRAM_THREAD_ID || '12493';
    
    if (!CHAT_ID) {
      console.log('‚ö†Ô∏è TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
      return { success: false, error: 'TELEGRAM_CHAT_ID not configured' };
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å Python –±–æ—Ç–æ–º
    const notificationData = {
      chat_id: CHAT_ID,
      message_thread_id: THREAD_ID,
      text: `‚úÖ **–ó–ê–Ø–í–ö–ê –í–´–ü–û–õ–ù–ï–ù–ê**

üìß **Email –∫–ª–∏–µ–Ω—Ç–∞:** ${emailAddress}
üõ£Ô∏è **–ú–∞—Ä—à—Ä—É—Ç:** ${routeInfo}
üìÖ **–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** ${new Date().toLocaleDateString('ru-RU')}
${orderData.orderId ? `üÜî **ID –∑–∞—è–≤–∫–∏:** ${orderData.orderId}` : ''}
${orderData.company ? `üè¢ **–ö–æ–º–ø–∞–Ω–∏—è:** ${orderData.company}` : ''}
${orderData.clientName ? `üë§ **–ö–ª–∏–µ–Ω—Ç:** ${orderData.clientName}` : ''}
${orderData.phone ? `üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** ${orderData.phone}` : ''}

üìß **–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É**`,
      parse_mode: 'Markdown'
    };

    console.log('üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ —á–µ—Ä–µ–∑ Python –±–æ—Ç —Å–µ—Ä–≤–µ—Ä:', {
      emailAddress,
      routeInfo,
      orderId: orderData.orderId,
      server: PYTHON_BOT_SERVER
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å Python –±–æ—Ç–æ–º
    const response = await axios.post(`${PYTHON_BOT_SERVER}/send-telegram-message`, notificationData, {
      timeout: 15000,
      headers: {
        'Content-Type': 'application/json'
      }
    });

    if (response.data.success) {
      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Python –±–æ—Ç —Å–µ—Ä–≤–µ—Ä');
      return { success: true, messageId: response.data.messageId };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Python –±–æ—Ç —Å–µ—Ä–≤–µ—Ä:', response.data);
      return { success: false, error: response.data.error || 'Unknown error' };
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Python –±–æ—Ç —Å–µ—Ä–≤–µ—Ä:', error.message);
    return { success: false, error: error.message };
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ –≤ Telegram –±–æ—Ç
 * @param {string} emailAddress - email –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} routeInfo - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ
 * @param {Object} orderData - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
 */
async function sendCompletionEmail(emailAddress, routeInfo, orderData = {}) {
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
  return await sendCompletionNotification(emailAddress, routeInfo, orderData);
}

module.exports = {
  sendCompletionNotification,
  sendCompletionEmail
};
