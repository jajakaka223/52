#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */

const { Pool } = require('pg');

// –í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã
const configs = [
  { host: 'localhost', port: 5432, database: 'transport_company', user: 'postgres', password: 'admin' },
  { host: 'localhost', port: 5432, database: 'transport_company', user: 'postgres', password: 'postgres' },
  { host: 'localhost', port: 5432, database: 'transport_company', user: 'postgres', password: 'password' },
  { host: 'localhost', port: 5432, database: 'transport_company', user: 'postgres', password: '123456' },
  { host: 'localhost', port: 5432, database: 'transport_company', user: 'postgres', password: '' },
];

async function testConnection() {
  for (let i = 0; i < configs.length; i++) {
    const config = configs[i];
    console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é ${i + 1}: ${config.user}@${config.host}:${config.port}/${config.database}`);
    
    const pool = new Pool(config);
    
    try {
      const client = await pool.connect();
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º: "${config.password}"`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
      const result = await client.query(`
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
        ORDER BY table_name
      `);
      
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: ${result.rows.length}`);
      result.rows.forEach(row => {
        console.log(`   - ${row.table_name}`);
      });
      
      client.release();
      await pool.end();
      
      console.log(`\nüéâ –†–∞–±–æ—á–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞!`);
      console.log(`–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ migrate-to-railway.js:`);
      console.log(JSON.stringify(config, null, 2));
      
      return config;
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      await pool.end();
    }
  }
  
  console.log(`\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
  console.log(`–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:`);
  console.log(`1. PostgreSQL –∑–∞–ø—É—â–µ–Ω`);
  console.log(`2. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'transport_company' —Å–æ–∑–¥–∞–Ω–∞`);
  console.log(`3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'postgres' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
  console.log(`4. –ü–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π`);
}

testConnection().catch(console.error);
