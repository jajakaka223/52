#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Railway
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Railway URL
 */

const { Pool } = require('pg');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Railway —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL
const railwayConfig = {
  host: 'ballast.proxy.rlwy.net',
  port: 40362,
  database: 'railway',
  user: 'postgres',
  password: 'GxebDCtEXaMnwEHatMMDtgfqXefjQfFr'
};

async function initData() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Railway...');
  console.log(`üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: ${railwayConfig.host}:${railwayConfig.port}/${railwayConfig.database}`);
  
  const pool = new Pool(railwayConfig);
  
  try {
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
    try {
      const userCount = await client.query('SELECT COUNT(*) FROM users');
      const count = parseInt(userCount.rows[0].count);
      
      if (count > 0) {
        console.log(`üë• –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å ${count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        return;
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...');
    }
    
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ...');
    
    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const bcrypt = require('bcryptjs');
    const hashedPassword = await bcrypt.hash('admin', 10);
    
    await client.query(`
      INSERT INTO users (username, password, full_name, role, email)
      VALUES ('admin', $1, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'admin', 'admin@company.com')
      ON CONFLICT (username) DO NOTHING
    `, [hashedPassword]);
    
    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω (admin/admin)');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è
    const driverPassword = await bcrypt.hash('driver', 10);
    
    await client.query(`
      INSERT INTO users (username, password, full_name, role, email)
      VALUES ('driver', $1, '–¢–µ—Å—Ç–æ–≤—ã–π –í–æ–¥–∏—Ç–µ–ª—å', 'driver', 'driver@company.com')
      ON CONFLICT (username) DO NOTHING
    `, [driverPassword]);
    
    console.log('‚úÖ –í–æ–¥–∏—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω (driver/driver)');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –º–∞—à–∏–Ω—É
    await client.query(`
      INSERT INTO vehicles (name, model, plate_number, is_active)
      VALUES ('–ì–∞–∑–µ–ª—å', '–ì–ê–ó-3302', '–ê123–ë–í77', true)
      ON CONFLICT (plate_number) DO NOTHING
    `);
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –º–∞—à–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
    await client.query(`
      INSERT INTO orders (date, direction, distance, weight, amount, company, client_name, phone, status)
      VALUES (CURRENT_DATE, '–ú–æ—Å–∫–≤–∞ - –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', 635.5, 1500.0, 25000.0, '–û–û–û –¢–µ—Å—Ç', '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤', '+7-999-123-45-67', 'new')
    `);
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞');
    
    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
    client.release();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initData().catch(console.error);
